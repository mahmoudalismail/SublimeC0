<?xml version="1.0" encoding="UTF-8"?>
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>c0</string>
		<string>h0</string>
	</array>
	<key>scopeName</key>
	<string>source.c0</string>
	<key>uuid</key>
	<string>5b46c5ee-132d-4b3b-8eb8-98a197bc7480</string>
	<key>name</key>
	<string>C0</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>comment</key>
			<string>Directives - Preprocessor</string>
			<key>match</key>
			<string>(#)(use|include|functions|help|locals|structs|exit|reload)\s+(&lt;\w+&gt;)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.source.c0</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.language.source.c0</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>support.function.source.c0</string>
				</dict>
			</dict>
			<key>name</key>
			<string>keyword.source.c0</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Type - Typedef</string>
			<key>match</key>
			<string>typedef\s+</string>
			<key>name</key>
			<string>entity.name.function.source.c0</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Scope - Bracket</string>
			<key>match</key>
			<string>[\{\}]</string>
			<key>name</key>
			<string>variable.other.source.c0</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Function - Definition</string>
			<key>begin</key>
			<string>^\s*(void|bool|int|char|string|pixel|int_array)([\[\*]?\]?)\s+([A-Za-z_][A-Za-z0-9_]*)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.source.c0</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.source.c0</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.source.c0</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable.other.source.c0</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.other.source.c0</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
				<dict>
					<key>name</key>
					<string>source.c0</string>
					<key>match</key>
					<string>.</string>
				</dict>
			</array>
			<key>contentName</key>
			<string>source.c0</string>
			<key>name</key>
			<string>source.c0</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Structure - Definition</string>
			<key>match</key>
			<string>\b(struct)\s+([A-Za-z_][\w\d_]*\*?\[?\]?)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.source.c0</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.source.c0</string>
				</dict>
			</dict>
			<key>name</key>
			<string>constant.language.source.c0</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Operator - Unary</string>
			<key>match</key>
			<string>!|~|:|\?|%|\-&gt;|\||&amp;|^|&lt;&lt;|&gt;&gt;|\+\-\/\*</string>
			<key>name</key>
			<string>constant.language.source.c0</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Operator - Binary</string>
			<key>match</key>
			<string>==|&amp;&amp;|\|\||&lt;|&gt;|&lt;|&gt;</string>
			<key>name</key>
			<string>constant.other.source.c0</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Operator - Assignment</string>
			<key>match</key>
			<string>=|\+\+|\-\-|\*\*</string>
			<key>name</key>
			<string>constant.other.source.c0</string>
		</dict>

		<dict>
			<key>comment</key>
			<string>Type - Array Identifier</string>
			<key>match</key>
			<string>(int|bool|char|string|pixel|int_array)\[\]\s</string>
			<key>name</key>
			<string>support.type.source.c0</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Type - Pointer Identifier</string>
			<key>match</key>
			<string>(int|bool|char|string|pixel|int_array)\*\s</string>
			<key>name</key>
			<string>entity.name.class.source.c0</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Type - Identifier</string>
			<key>match</key>
			<string>\b(bool|int|char|string|pixel|int_array)\b</string>
			<key>name</key>
			<string>support.type.source.c0</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Constant - Integer</string>
			<key>match</key>
			<string>\b\d+\b</string>
			<key>name</key>
			<string>constant.numeric.source.c0</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Constant - Hexadecimal</string>
			<key>match</key>
			<string>\b0[Xx][A-Fa-f0-9][A-Fa-f0-9]?[A-Fa-f0-9]?[A-Fa-f0-9]?[A-Fa-f0-9]?[A-Fa-f0-9]?[A-Fa-f0-9]?[A-Fa-f0-9]?</string>
			<key>name</key>
			<string>constant.numeric.source.c0</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Constant - Character</string>
			<key>match</key>
			<string>'.*'</string>
			<key>name</key>
			<string>string.quoted.double.source.c0</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Constant - String</string>
			<key>begin</key>
			<string>"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.source.c0</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Constant - Literals</string>
			<key>match</key>
			<string>void|NULL|null|true|false|alloc_array|m?alloc|assert|\\(old|length|result)</string>
			<key>name</key>
			<string>constant.language.source.c0</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Keyword - Control</string>
			<key>match</key>
			<string>(if|else|while|for|return|continue|break)</string>
			<key>name</key>
			<string>keyword.control.c0</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Function - Call</string>
			<key>begin</key>
			<string>([A-Za-z_][\w]*)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.class.source.c0</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.source.c0</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.other.source.c0</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
				<dict>
					<key>name</key>
					<string>source.c0</string>
					<key>match</key>
					<string>.</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>comment</key>
			<string>Array - Access</string>
			<key>begin</key>
			<string>([A-Za-z_][\w]*)\s*(\[)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.source.c0</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.source.c0</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.other.source.c0</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
				<dict>
					<key>name</key>
					<string>source.c0</string>
					<key>match</key>
					<string>.</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>comment</key>
			<string>Annotation - Comment</string>
			<key>match</key>
			<string>//(?!@).*</string>
			<key>name</key>
			<string>comment.line.c0</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>/\*(?!@)</string>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.c0</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Annotation - Block Comment</string>
					<key>match</key>
					<string>.</string>
					<key>name</key>
					<string>comment.block.c0</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Annotation - Highlight</string>
					<key>match</key>
					<string>\*\|\-\.</string>
					<key>name</key>
					<string>comment.c0</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>comment</key>
			<string>Annotation - Contract</string>
			<key>match</key>
			<string>/[/\*]@(requires|ensures|loop_invariant|assert)\s|@\*/</string>
			<key>name</key>
			<string>keyword.storage.source.c0</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Annotation - Block Contract</string>
			<key>match</key>
			<string>//@.*</string>
			<key>name</key>
			<string>keyword.source.c0</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>/\*@(requires|ensures|loop_invariant|assert) </string>
			<key>end</key>
			<string>@\*/</string>
			<key>name</key>
			<string>keyword.source.c0</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Annotation - Block Contract</string>
					<key>match</key>
					<string>.</string>
					<key>name</key>
					<string>keyword.source.c0</string>
				</dict>
			</array>
		</dict>
	</array>
</dict>
</plist>
